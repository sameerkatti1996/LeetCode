/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        queue<TreeNode*> q;
        vector<double> result;
        int levelNodes;
        TreeNode *curr;
        double avg = 0;
        
        q.push(root);
        
        while(!q.empty())
        {
            levelNodes = q.size();
            for(int i=0; i<levelNodes; i++)
            {
                curr = q.front();
                avg += curr->val;
                
                if(curr->left != NULL)
                    q.push(curr->left);
    
                if(curr->right != NULL)
                    q.push(curr->right);
                
                q.pop();
            }
            result.push_back(avg/levelNodes);
            avg = 0;
        }
        
        return result;
    }
};
