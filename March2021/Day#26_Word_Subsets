//Calculate count of letters in each word
//Then calculate maximum count of each letter for all words in B combined
//Logic is that if any word in A has equal to or more than maximum for every letter,
//then it is universal

class Solution {
public:
    vector<string> wordSubsets(vector<string>& A, vector<string>& B) {
        map<char, int> count;
        
        vector<string> result;
        
        for(int i=0; i<B.size(); i++)
        {
            map<char, int> char_count;  
            string word = B[i];
            
            for(int j=0; j<word.size(); j++)
            {
                if (char_count.find(word[j]) == char_count.end())
                    char_count.insert(make_pair(word[j], 1));
                else
                    char_count[word[j]]++;
            }
            
            for (auto& it : char_count) {
                if(count.find(it.first) != count.end()){
                    if(count[it.first] < it.second)
                        count[it.first] = it.second;
                }
                else{
                    count[it.first] = it.second;
                }
            }
            
        }
        
        const auto& lastKey = count.rbegin()->first;
      
        for(int i=0; i<A.size(); i++)
        {
            string word = A[i];
            map<char, int> char_count;  
            for(int j=0; j<word.size(); j++)
            {
                if (char_count.find(word[j]) == char_count.end())
                    char_count.insert(make_pair(word[j], 1));
                else
                    char_count[word[j]]++;
            }
            
            
            for(auto& it:count)
            {
                if(char_count.find(it.first) == char_count.end())
                    break;
                if(char_count[it.first] < it.second)
                    break;
                if(it.first == lastKey)
                {
                    result.push_back(word);
                }
            }
            
        }
        
        return result;
    }
};
