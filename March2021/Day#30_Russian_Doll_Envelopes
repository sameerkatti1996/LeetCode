class Solution {
public:
    static bool sortcol( const vector<int>& v1, const vector<int>& v2 ) {
        return v1[0] < v2[0];
    }
    
    int maxEnvelopes(vector<vector<int>>& envelopes) {
        int n = envelopes.size();
        vector<int> dp(n, 1);
        int max = 1;
        
        //cout << n << endl;
        
        sort(envelopes.begin(), envelopes.end(), sortcol);
        
        for(int i=1; i<n; i++)
        {
            int temp = i-1;
                while(temp >= 0)
                {
                    //cout << temp << " ";
                    if(envelopes[i][0] > envelopes[temp][0] && envelopes[i][1] > envelopes[temp][1]){
                        if(dp[i] <= dp[temp])
                            dp[i] = dp[temp] + 1;
                    }
                    temp--;
                }
                //cout << endl;
            
            if(dp[i]>max)
                max = dp[i];
        }
        
        //for(int i=0; i<dp.size(); i++)
        //        cout << dp[i] << " ";
        
        return max;
    }
};

